plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
# p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
#              widths = c(1,1, 1, 1),
#              layout_matrix = rbind(c(NA, 1, 2, NA),
#                                    c(NA, 3, 4, NA)))
p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
widths = c(1, 1, 1, 1),
layout_matrix = rbind(c(1, 2),
c(3, 4)))
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
p_test2
dev.off()
plot4
dev.off()
plot2
p_test2
p_test2 <- grid.arrange(plot1, plot2,  plot3, plot4, nrow = 2)
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
p_test2
dev.off()
#par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
# p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
#              widths = c(1,1, 1, 1),
#              layout_matrix = rbind(c(NA, 1, 2, NA),
#                                    c(NA, 3, 4, NA)))
p_test2 <- grid.arrange(plot1, plot2,  plot3, plot4, nrow = 2)
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
p_test2
dev.off()
p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
widths = c(1,1, 1, 1),
layout_matrix = rbind(c(NA, 1, 2, NA),
c(NA, 3, 4, NA)))
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
p_test2
dev.off()
tikzTest()
p_test2
p_test2
plot1
plot2
plot3
plot4
grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
widths = c(1,1, 1, 1),
layout_matrix = rbind(c(NA, 1, 2, NA),
c(NA, 3, 4, NA)))
p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
widths = c(1,1, 1, 1),
layout_matrix = rbind(c(NA, 1, 2, NA),
c(NA, 3, 4, NA)))
p_test2
grid.arrange(c(plot1, plot2,  plot3, plot4))
grid.arrange(plot1, plot2,  plot3, plot4)
p_test2<- grid.arrange(plot1, plot2,  plot3, plot4)
p_test2
p_test2
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
p_test2
dev.off()
print(p_test2)
print(p_test2)
p_test2
as.type(p_test2)
typeof(p_test2)
typeof(plot1)
p_test2<- grid.arrange(plot1, plot2,  plot3, plot4)
p_test2
p_test2
plot1
p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
widths = c(1,1, 1, 1),
layout_matrix = rbind(c(NA, 1, 2, NA),
c(NA, 3, 4, NA)))
library(gridExtra)
p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
widths = c(1,1, 1, 1),
layout_matrix = rbind(c(NA, 1, 2, NA),
c(NA, 3, 4, NA)))
p_test2
typeof(plot1)
typeof(p_test2)
ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
install.packages('ggpubr')
library(ggpubr)
install.packages('tidyr')
library(ggpubr)
ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
p_test2 <- ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
print(p_test2)
dev.off()
p_test2 <- ggarrange(NULL, plot1, plot2, NULL, NULL,  plot3,  plot4, NULL,
ncol = 4, nrow = 2)
p_test2
p_test2 <- ggarrange(plot1, NULL, plot2, plot3, NULL,  plot4,
ncol = 3, nrow = 2, widths = c(1, 0.01, 1))
p_test2
p_test2 <- ggarrange(plot1, NULL, plot2, plot3, NULL,  plot4,
ncol = 3, nrow = 2, widths = c(1, 0.000001, 1))
p_test2
p_test2 <- ggarrange(plot1, NULL, plot2, plot3, NULL,  plot4,
ncol = 3, nrow = 2, widths = c(1, -2, 1))
p_test2
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
# p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
#              widths = c(1,1, 1, 1),
#              layout_matrix = rbind(c(NA, 1, 2, NA),
#                                    c(NA, 3, 4, NA)))
# p_test2<- grid.arrange(plot1, plot2,  plot3, plot4)
# p_test2
p_test2 <- ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
p_test2
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
# p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
#              widths = c(1,1, 1, 1),
#              layout_matrix = rbind(c(NA, 1, 2, NA),
#                                    c(NA, 3, 4, NA)))
# p_test2<- grid.arrange(plot1, plot2,  plot3, plot4)
# p_test2
library(ggpubr)
p_test2 <- ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
p_test2
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
# p_test2 <- grid.arrange(grobs = list(plot1, plot2,  plot3, plot4),
#              widths = c(1,1, 1, 1),
#              layout_matrix = rbind(c(NA, 1, 2, NA),
#                                    c(NA, 3, 4, NA)))
# p_test2<- grid.arrange(plot1, plot2,  plot3, plot4)
# p_test2
p_test2 <- ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
p_test2
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
#par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
plot2 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
data[resSpot[,1] == 1,c(1,2,3)]
data[,c(1,2,3)]
plot2 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
#par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
dev.off()
#par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot1
#par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1
rm(list=ls())
library(BalancedSampling)
library(sampling)
library(WaveSampling)
library(pracma)
library(MASS)
library(gridExtra)
user <- c('setille\\switchdrive\\__PROJETS_DE_RECHERCHE\\',
'eustachee\\switchdrive\\',
'jauslinr\\switchdrive\\')[2]
#---------LOADING PACKAGE---------#
devtools::load_all(paste0('C:\\Users\\',user,'\\Spatio-temporal\\package\\SpotSampling\\'))
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
# #----------------DATA LIBELLULE---------------#
pathDat <- paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\')
#-----Suisse
# data      <- read.csv(file = "data_square_lib.csv", sep = ',')
#-----Mitteland
#data      <- read.csv(file = "mitteland_square_lib.csv", sep = ',')
#-----Neuch Vaud Gruyere
data <- read.csv(file = paste0(pathDat,'Neuch_Vaud_Gruyere_2.csv'), sep = ',')
df       <- data[sample(1:1407,1400),]
# df       <- data
coord    <- as.matrix(df[,1:2])
N        <- nrow(df)
# #--------INCLUSION PROBABILITIES-----------#
t       <- 3
pik     <- matrix(rep(0, t*N), ncol = t)
pik[,1] <- rep(200/N,N)
pik[,2] <- rep(250/N,N)
pik[,3] <- rep(300/N,N)
EPS <- 1e-8
n <- colSums(pik)
S <- matrix(rep(0,N*t), nrow = N, ncol = t)
pik_new      <- Preselection(pik, coord, L = 1)
TEST         <- rowSums(pik_new)>EPS
pik_remain   <- pik_new[TEST,]
coord_remain <- coord[TEST,]
resSpot <- Spot(pik_remain, coord_remain)
#--------------PLOT------------#
path <- paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\\\ggg_2019-LV03\\shp')
# plotSwiss(X = data, Xs = data[A==1,], Region = c(2), Canton = TRUE, Commune = FALSE, path = path)
# plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Region = c(2,3), Canton = TRUE, Commune = FALSE, path = path)
# plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
par(mfrow=c(1,1))
p_test <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Canton = c(10, 22,24), Region = NULL,
Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
X = data[,c(1,2,3)]
Xs = NULL
Canton = c(10, 22,24)
Region = NULL
Commune = FALSE
xlab = 'Longitude'
ylab = 'Latitude'
# require package
require(ggplot2)
require(sf)
require(raster)
# load shapefile
Swiss <- read_sf(paste0(path,"\\g1l19.shp"))
SwissRegion <- read_sf(paste0(path,"\\g1r19.shp"))
SwissCanton <- read_sf(paste0(path,"\\g1k19.shp"))
path
# load shapefile
Swiss <- read_sf(paste0(path,"\\g1l19.shp"))
Swiss
paste0(path,"\\g1l19.shp")
read_sf
devtools
devtools::load_all()
library(BalancedSampling)
library(sampling)
library(WaveSampling)
library(pracma)
library(MASS)
library(gridExtra)
rm(list=ls())
user <- c('setille\\switchdrive\\__PROJETS_DE_RECHERCHE\\',
'eustachee\\switchdrive\\',
'jauslinr\\switchdrive\\')[2]
#---------LOADING PACKAGE---------#
devtools::load_all(paste0('C:\\Users\\',user,'\\Spatio-temporal\\package\\SpotSampling\\'))
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
# #----------------DATA LIBELLULE---------------#
pathDat <- paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\')
#-----Suisse
# data      <- read.csv(file = "data_square_lib.csv", sep = ',')
#-----Mitteland
#data      <- read.csv(file = "mitteland_square_lib.csv", sep = ',')
#-----Neuch Vaud Gruyere
data <- read.csv(file = paste0(pathDat,'Neuch_Vaud_Gruyere_2.csv'), sep = ',')
df       <- data[sample(1:1407,1400),]
# df       <- data
coord    <- as.matrix(df[,1:2])
N        <- nrow(df)
# #--------INCLUSION PROBABILITIES-----------#
t       <- 3
pik     <- matrix(rep(0, t*N), ncol = t)
pik[,1] <- rep(200/N,N)
pik[,2] <- rep(250/N,N)
pik[,3] <- rep(300/N,N)
# pik[,1] <- rep(250/N,N)
# pik[,2] <- inclusionprobabi
pik[,1]
EPS <- 1e-8
n <- colSums(pik)
S <- matrix(rep(0,N*t), nrow = N, ncol = t)
pik_new      <- Preselection(pik, coord, L = 1)
TEST         <- rowSums(pik_new)>EPS
pik_remain   <- pik_new[TEST,]
coord_remain <- coord[TEST,]
resSpot <- Spot(pik_remain, coord_remain)
#--------------PLOT------------#
path <- paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\\\ggg_2019-LV03\\shp')
# plotSwiss(X = data, Xs = data[A==1,], Region = c(2), Canton = TRUE, Commune = FALSE, path = path)
# plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Region = c(2,3), Canton = TRUE, Commune = FALSE, path = path)
# plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
par(mfrow=c(1,1))
p_test <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Canton = c(10, 22,24), Region = NULL,
Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
plot2 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
library(ggpubr)
p_test2 <- ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
p_test2
#---------LOADING PACKAGE---------#
devtools::load_all(paste0('C:\\Users\\',user,'\\Spatio-temporal\\package\\SpotSampling\\'))
#---------LOADING OTHER FUNCTIONS---------#
source(paste0('C:\\Users\\',user,'Spatio-temporal\\simulations\\function.R'))
par(mfrow=c(2,2))
plot1 <- plotSwiss(X = data[,c(1,2,3)], Xs = NULL, Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, ylab = "Latitude") #Vaud + Neuch
plot1 <- plot1 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot2 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,1] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path) #Vaud + Neuch
plot2 <- plot2 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot3 <- plotSwiss(X = data[,c(1,2,3)], Xs = data[resSpot[,2] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude', ylab = 'Latitude') #Vaud + Neuch
plot3 <- plot3 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
plot4 <- plotSwiss2(X = data[,c(1,2,3)], Xs = data[resSpot[,3] == 1,c(1,2,3)], Xp = data[TEST,c(1,2,3)], Canton = c(10, 22,24), Region = NULL, Commune = FALSE, path = path, xlab = 'Longitude') #Vaud + Neuch
plot4 <- plot4 +
scale_y_continuous(breaks = c(46.2,46.4,46.6,46.8,47,47.2),
labels = c("$46.2^\\circ$N","$46.4^\\circ$N","$46.6^\\circ$N","$46.8^\\circ$N","$47^\\circ$N","$47.2^\\circ$N")) +
scale_x_continuous(breaks = c(6.2,6.4,6.6,6.8,7,7.2,7.4),
labels = c("$6.2^\\circ$E","$6.4^\\circ$E","$6.6^\\circ$E","$6.8^\\circ$E","$7^\\circ$E","$7.2^\\circ$E","$7.4^\\circ$E"))
p_test2 <- ggarrange(plot1, plot2, plot3,  plot4,
ncol = 2, nrow = 2)
p_test2
library(tikzDevice)
tikz(file = "C:\\Users\\eustachee\\switchdrive\\Spatio-temporal\\version_4\\Rplot2.tex", width =5.81268, height = 4,standAlone = FALSE)
print(p_test2)
dev.off()
365+553+852
17.5-10.8
6.7+11+0.7+4
47000/12
